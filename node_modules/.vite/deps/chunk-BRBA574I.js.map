{
  "version": 3,
  "sources": ["../../@solana/wallet-adapter-base-ui/src/index.ts", "../../@solana/wallet-adapter-base-ui/src/useWalletConnectButton.ts", "../../@solana/wallet-adapter-base-ui/src/useWalletDisconnectButton.ts", "../../@solana/wallet-adapter-base-ui/src/useWalletMultiButton.ts"],
  "sourcesContent": ["export * from './useWalletConnectButton.js';\nexport * from './useWalletDisconnectButton.js';\nexport * from './useWalletMultiButton.js';\n", "import { useWallet, type Wallet } from '@solana/wallet-adapter-react';\nimport { useCallback } from 'react';\n\ntype ButtonState = {\n    buttonDisabled: boolean;\n    buttonState: 'connecting' | 'connected' | 'has-wallet' | 'no-wallet';\n    onButtonClick?: () => void;\n    walletIcon?: Wallet['adapter']['icon'];\n    walletName?: Wallet['adapter']['name'];\n};\n\nexport function useWalletConnectButton(): ButtonState {\n    const { connect, connected, connecting, wallet } = useWallet();\n    let buttonState: ButtonState['buttonState'];\n    if (connecting) {\n        buttonState = 'connecting';\n    } else if (connected) {\n        buttonState = 'connected';\n    } else if (wallet) {\n        buttonState = 'has-wallet';\n    } else {\n        buttonState = 'no-wallet';\n    }\n    const handleConnectButtonClick = useCallback(() => {\n        connect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [connect]);\n    return {\n        buttonDisabled: buttonState !== 'has-wallet',\n        buttonState,\n        onButtonClick: buttonState === 'has-wallet' ? handleConnectButtonClick : undefined,\n        walletIcon: wallet?.adapter.icon,\n        walletName: wallet?.adapter.name,\n    };\n}\n", "import { useWallet, type Wallet } from '@solana/wallet-adapter-react';\nimport { useCallback } from 'react';\n\ntype ButtonState = {\n    buttonDisabled: boolean;\n    buttonState: 'disconnecting' | 'has-wallet' | 'no-wallet';\n    onButtonClick?: () => void;\n    walletIcon?: Wallet['adapter']['icon'];\n    walletName?: Wallet['adapter']['name'];\n};\n\nexport function useWalletDisconnectButton(): ButtonState {\n    const { disconnecting, disconnect, wallet } = useWallet();\n    let buttonState: ButtonState['buttonState'];\n    if (disconnecting) {\n        buttonState = 'disconnecting';\n    } else if (wallet) {\n        buttonState = 'has-wallet';\n    } else {\n        buttonState = 'no-wallet';\n    }\n    const handleDisconnectButtonClick = useCallback(() => {\n        disconnect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [disconnect]);\n    return {\n        buttonDisabled: buttonState !== 'has-wallet',\n        buttonState,\n        onButtonClick: buttonState === 'has-wallet' ? handleDisconnectButtonClick : undefined,\n        walletIcon: wallet?.adapter.icon,\n        walletName: wallet?.adapter.name,\n    };\n}\n", "import { useWallet, type Wallet } from '@solana/wallet-adapter-react';\nimport type { PublicKey } from '@solana/web3.js';\nimport { useCallback } from 'react';\n\ntype ButtonState = {\n    buttonState: 'connecting' | 'connected' | 'disconnecting' | 'has-wallet' | 'no-wallet';\n    onConnect?: () => void;\n    onDisconnect?: () => void;\n    onSelectWallet?: () => void;\n    publicKey?: PublicKey;\n    walletIcon?: Wallet['adapter']['icon'];\n    walletName?: Wallet['adapter']['name'];\n};\n\ntype Config = {\n    onSelectWallet: (config: {\n        onSelectWallet: (walletName: Wallet['adapter']['name']) => void;\n        wallets: Wallet[];\n    }) => void;\n};\n\nexport function useWalletMultiButton({ onSelectWallet }: Config): ButtonState {\n    const { connect, connected, connecting, disconnect, disconnecting, publicKey, select, wallet, wallets } =\n        useWallet();\n    let buttonState: ButtonState['buttonState'];\n    if (connecting) {\n        buttonState = 'connecting';\n    } else if (connected) {\n        buttonState = 'connected';\n    } else if (disconnecting) {\n        buttonState = 'disconnecting';\n    } else if (wallet) {\n        buttonState = 'has-wallet';\n    } else {\n        buttonState = 'no-wallet';\n    }\n    const handleConnect = useCallback(() => {\n        connect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [connect]);\n    const handleDisconnect = useCallback(() => {\n        disconnect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [disconnect]);\n    const handleSelectWallet = useCallback(() => {\n        onSelectWallet({ onSelectWallet: select, wallets });\n    }, [onSelectWallet, select, wallets]);\n    return {\n        buttonState,\n        onConnect: buttonState === 'has-wallet' ? handleConnect : undefined,\n        onDisconnect: buttonState !== 'disconnecting' && buttonState !== 'no-wallet' ? handleDisconnect : undefined,\n        onSelectWallet: handleSelectWallet,\n        publicKey: publicKey ?? undefined,\n        walletIcon: wallet?.adapter.icon,\n        walletName: wallet?.adapter.name,\n    };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,gBAAA;IAAAA,gBAAA;IAAAA,gBAAA;;;ACAA;IAAAC,eAAA;IAAAA,eAAA;AACA,mBAA4B;AAUtB,SAAU,yBAAsB;AAClC,QAAM,EAAE,SAAS,WAAW,YAAY,OAAM,IAAK,UAAS;AAC5D,MAAI;AACJ,MAAI,YAAY;AACZ,kBAAc;aACP,WAAW;AAClB,kBAAc;aACP,QAAQ;AACf,kBAAc;SACX;AACH,kBAAc;;AAElB,QAAM,+BAA2B,0BAAY,MAAK;AAC9C,YAAO,EAAG,MAAM,MAAK;IAErB,CAAC;EACL,GAAG,CAAC,OAAO,CAAC;AACZ,SAAO;IACH,gBAAgB,gBAAgB;IAChC;IACA,eAAe,gBAAgB,eAAe,2BAA2B;IACzE,YAAY,iCAAQ,QAAQ;IAC5B,YAAY,iCAAQ,QAAQ;;AAEpC;;;ACnCA,IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;AACA,IAAAC,gBAA4B;AAUtB,SAAU,4BAAyB;AACrC,QAAM,EAAE,eAAe,YAAY,OAAM,IAAK,UAAS;AACvD,MAAI;AACJ,MAAI,eAAe;AACf,kBAAc;aACP,QAAQ;AACf,kBAAc;SACX;AACH,kBAAc;;AAElB,QAAM,kCAA8B,2BAAY,MAAK;AACjD,eAAU,EAAG,MAAM,MAAK;IAExB,CAAC;EACL,GAAG,CAAC,UAAU,CAAC;AACf,SAAO;IACH,gBAAgB,gBAAgB;IAChC;IACA,eAAe,gBAAgB,eAAe,8BAA8B;IAC5E,YAAY,iCAAQ,QAAQ;IAC5B,YAAY,iCAAQ,QAAQ;;AAEpC;;;ACjCA,IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;AAEA,IAAAC,gBAA4B;AAmBtB,SAAU,qBAAqB,EAAE,eAAc,GAAU;AAC3D,QAAM,EAAE,SAAS,WAAW,YAAY,YAAY,eAAe,WAAW,QAAQ,QAAQ,QAAO,IACjG,UAAS;AACb,MAAI;AACJ,MAAI,YAAY;AACZ,kBAAc;aACP,WAAW;AAClB,kBAAc;aACP,eAAe;AACtB,kBAAc;aACP,QAAQ;AACf,kBAAc;SACX;AACH,kBAAc;;AAElB,QAAM,oBAAgB,2BAAY,MAAK;AACnC,YAAO,EAAG,MAAM,MAAK;IAErB,CAAC;EACL,GAAG,CAAC,OAAO,CAAC;AACZ,QAAM,uBAAmB,2BAAY,MAAK;AACtC,eAAU,EAAG,MAAM,MAAK;IAExB,CAAC;EACL,GAAG,CAAC,UAAU,CAAC;AACf,QAAM,yBAAqB,2BAAY,MAAK;AACxC,mBAAe,EAAE,gBAAgB,QAAQ,QAAO,CAAE;EACtD,GAAG,CAAC,gBAAgB,QAAQ,OAAO,CAAC;AACpC,SAAO;IACH;IACA,WAAW,gBAAgB,eAAe,gBAAgB;IAC1D,cAAc,gBAAgB,mBAAmB,gBAAgB,cAAc,mBAAmB;IAClG,gBAAgB;IAChB,WAAW,aAAa;IACxB,YAAY,iCAAQ,QAAQ;IAC5B,YAAY,iCAAQ,QAAQ;;AAEpC;",
  "names": ["import_dist", "import_dist", "import_dist", "import_react", "import_dist", "import_react"]
}
