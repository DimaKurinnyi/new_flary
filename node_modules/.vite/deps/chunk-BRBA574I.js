import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  useWallet
} from "./chunk-KLQDL7GD.js";
import {
  require_react
} from "./chunk-PBDMZCSI.js";
import {
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-7VCKL3WS.js";

// node_modules/@solana/wallet-adapter-base-ui/lib/esm/index.js
var import_dist10 = __toESM(require_dist());
var import_dist11 = __toESM(require_dist2());
var import_dist12 = __toESM(require_dist3());

// node_modules/@solana/wallet-adapter-base-ui/lib/esm/useWalletConnectButton.js
var import_dist = __toESM(require_dist(), 1);
var import_dist2 = __toESM(require_dist2(), 1);
var import_dist3 = __toESM(require_dist3(), 1);
var import_react = __toESM(require_react(), 1);
function useWalletConnectButton() {
  const { connect, connected, connecting, wallet } = useWallet();
  let buttonState;
  if (connecting) {
    buttonState = "connecting";
  } else if (connected) {
    buttonState = "connected";
  } else if (wallet) {
    buttonState = "has-wallet";
  } else {
    buttonState = "no-wallet";
  }
  const handleConnectButtonClick = (0, import_react.useCallback)(() => {
    connect().catch(() => {
    });
  }, [connect]);
  return {
    buttonDisabled: buttonState !== "has-wallet",
    buttonState,
    onButtonClick: buttonState === "has-wallet" ? handleConnectButtonClick : void 0,
    walletIcon: wallet == null ? void 0 : wallet.adapter.icon,
    walletName: wallet == null ? void 0 : wallet.adapter.name
  };
}

// node_modules/@solana/wallet-adapter-base-ui/lib/esm/useWalletDisconnectButton.js
var import_dist4 = __toESM(require_dist(), 1);
var import_dist5 = __toESM(require_dist2(), 1);
var import_dist6 = __toESM(require_dist3(), 1);
var import_react2 = __toESM(require_react(), 1);
function useWalletDisconnectButton() {
  const { disconnecting, disconnect, wallet } = useWallet();
  let buttonState;
  if (disconnecting) {
    buttonState = "disconnecting";
  } else if (wallet) {
    buttonState = "has-wallet";
  } else {
    buttonState = "no-wallet";
  }
  const handleDisconnectButtonClick = (0, import_react2.useCallback)(() => {
    disconnect().catch(() => {
    });
  }, [disconnect]);
  return {
    buttonDisabled: buttonState !== "has-wallet",
    buttonState,
    onButtonClick: buttonState === "has-wallet" ? handleDisconnectButtonClick : void 0,
    walletIcon: wallet == null ? void 0 : wallet.adapter.icon,
    walletName: wallet == null ? void 0 : wallet.adapter.name
  };
}

// node_modules/@solana/wallet-adapter-base-ui/lib/esm/useWalletMultiButton.js
var import_dist7 = __toESM(require_dist(), 1);
var import_dist8 = __toESM(require_dist2(), 1);
var import_dist9 = __toESM(require_dist3(), 1);
var import_react3 = __toESM(require_react(), 1);
function useWalletMultiButton({ onSelectWallet }) {
  const { connect, connected, connecting, disconnect, disconnecting, publicKey, select, wallet, wallets } = useWallet();
  let buttonState;
  if (connecting) {
    buttonState = "connecting";
  } else if (connected) {
    buttonState = "connected";
  } else if (disconnecting) {
    buttonState = "disconnecting";
  } else if (wallet) {
    buttonState = "has-wallet";
  } else {
    buttonState = "no-wallet";
  }
  const handleConnect = (0, import_react3.useCallback)(() => {
    connect().catch(() => {
    });
  }, [connect]);
  const handleDisconnect = (0, import_react3.useCallback)(() => {
    disconnect().catch(() => {
    });
  }, [disconnect]);
  const handleSelectWallet = (0, import_react3.useCallback)(() => {
    onSelectWallet({ onSelectWallet: select, wallets });
  }, [onSelectWallet, select, wallets]);
  return {
    buttonState,
    onConnect: buttonState === "has-wallet" ? handleConnect : void 0,
    onDisconnect: buttonState !== "disconnecting" && buttonState !== "no-wallet" ? handleDisconnect : void 0,
    onSelectWallet: handleSelectWallet,
    publicKey: publicKey ?? void 0,
    walletIcon: wallet == null ? void 0 : wallet.adapter.icon,
    walletName: wallet == null ? void 0 : wallet.adapter.name
  };
}

export {
  useWalletConnectButton,
  useWalletDisconnectButton,
  useWalletMultiButton
};
//# sourceMappingURL=chunk-BRBA574I.js.map
